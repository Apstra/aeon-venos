#!/usr/bin/env python

# nxos-gatherfacts

import sys
import os
import json


from aeon.nxos import NxosDevice
from aeon.exceptions import ProbeError, UnauthorizedError
from aeon.utils.stdargs import ArgumentParser, Stdargs


# ##### -----------------------------------------------------------------------
# #####
# #####                           COMMAND LINE ARGUMENTS
# #####
# ##### -----------------------------------------------------------------------

cli = Stdargs(
    name='nxos-gatherfacts',
    description="Cisco NXOS gather-facts")

cli.psr.add_argument(
    '--brief',
    action='store_true',
    help='brief set of facts')

# ##### -----------------------------------------------------------------------
# #####
# #####                           MAIN
# #####
# ##### -----------------------------------------------------------------------

def exit_results(results, exit_error=None):
    json.dump(results, fp=sys.stdout)
    sys.exit(0 if results['ok'] is True else exit_error or 1)


def main():
    try:
        cli.parse_args()

        if not cli.user:
            exit_results(dict(ok=False, message='Missing login user'))

        if not cli.passwd:
            exit_results(dict(ok=False, message='Missing login password'))

    except ArgumentParser.ParserError as exc:
            exit_results(dict(ok=False, message=exc.message))

    try:
        dev = NxosDevice(cli.target, user=cli.user, passwd=cli.passwd)

    except UnauthorizedError:
        exit_results(dict(
            ok=False,
            message='Uauthorized - check user/password'))

    except ProbeError:
        exit_results(dict(
            ok=False,
            message='Failed to probe target %s' % cli.target))

    else:
        if cli.args.brief:
            facts=dict(
                os_version=dev.facts['os_version'],
                hw_model=dev.facts['hw_model'],
                serial_number=dev.facts['serial_number'])
        else:
            facts = dev.facts

        exit_results(dict(ok=True, facts=facts))

if '__main__' == __name__:
    main()
