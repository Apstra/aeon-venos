#!/usr/bin/env python

# nxos-gatherfacts

import sys
import json

from aeon.nxos import NxosDevice
from aeon.exceptions import ProbeError, UnauthorizedError
from aeon.utils.stdargs import ArgumentParser, Stdargs

GS_DEFAULTS = {
    'cpu': 1,
    'disk': 400,
    'memory': 256
}

# ##### -----------------------------------------------------------------------
# #####
# #####                           COMMAND LINE ARGUMENTS
# #####
# ##### -----------------------------------------------------------------------

def setup_cli():
    cli = Stdargs(
        name='nxos-guestshell',
        description="Cisco NXOS guestshell utility")

    subparsers = cli.psr.add_subparsers(dest='subcmd')

    sub = subparsers.add_parser(
        'enable', help='enable guestshell with size')

    sub.add_argument(
        '--cpu', help='CPU percentage setting',
        type=int, default=GS_DEFAULTS['cpu'])

    sub.add_argument(
        '--disk', help='Disk size setting',
        type=int, default=GS_DEFAULTS['disk'])

    sub.add_argument(
        '--memory', help='Memory size setting',
        type=int, default=GS_DEFAULTS['memory'])

    sub.add_argument(
        '--wipe', help='Destroy guestshell and re-create')

    sub = subparsers.add_parser(
        'show', help='show guestshell details')

    sub = subparsers.add_parser(
        'disable', help='disable guestshell')

    sub = subparsers.add_parser(
        'run', help='run command in guestshell')

    return cli

cli = setup_cli()

# ##### -----------------------------------------------------------------------
# #####
# #####                           MAIN
# #####
# ##### -----------------------------------------------------------------------

def exit_results(results, exit_error=None):
    json.dump(results, fp=sys.stdout)
    sys.exit(0 if results['ok'] is True else exit_error or 1)


def do_guestshell(cli, dev):
    dev.guestshell()

    import pdb
    pdb.set_trace()


def main():
    try:
        cli.parse_args()

        if not cli.user:
            exit_results(dict(ok=False, message='Missing login user'))

        if not cli.passwd:
            exit_results(dict(ok=False, message='Missing login password'))

    except ArgumentParser.ParserError as exc:
            exit_results(dict(ok=False, message=exc.message))

    try:
        dev = NxosDevice(cli.target, user=cli.user, passwd=cli.passwd)

    except UnauthorizedError:
        exit_results(dict(
            ok=False,
            message='Uauthorized - check user/password'))

    except ProbeError:
        exit_results(dict(
            ok=False,
            message='Failed to probe target %s' % cli.target))

    else:
        do_guestshell(cli, dev)

if '__main__' == __name__:
    main()
